<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cj.dao.StudentDao">
    <select id="getById" resultType="Student" parameterType="String">
        select * from tbl_student where id = #{id}
    </select>
    <insert id="save" parameterType="Student">
        insert into tbl_student(id,name,age) values (#{id},#{name},#{age})
    </insert>
    <select id="getAll" resultType="Student">
        select * from tbl_student
    </select>
    <select id="select1" parameterType="String" resultType="Student">
        select * from tbl_student where id=#{id}
    </select>
    <select id="select2" parameterType="Map" resultType="Student">
        select * from tbl_student where id=#{id} and name=#{name}
    </select>
    <select id="select3" resultType="Map">
        select * from tbl_student
    </select>
    <select id="select4" parameterType="String" resultType="Student">
        /*${必须是value}*/
        select * from tbl_student where id=${value}
    </select>
    <select id="select5" parameterType="String" resultType="Map">
        select * from tbl_student where id like '_${value}%'
    </select>
    <select id="select6" parameterType="String" resultType="Map">
       /*
          '_' #{id} '_'
          '%' #{id} '%'
          必须用空格隔开
       */
        select * from tbl_student where id like '_' #{id} '_'
    </select>
    <!--
        当数据库表中字段名与domain类中属性名不一致时
        方式一：起别名
    -->
    <select id="select8" resultType="Student">
        select id,nameaaaaa as name,age from tb_student
    </select>
    <!--
        方式二:使用resultMap标签进行配对
        id:resultMap标签对的唯一标识
        type:指定一个类型，与数据库表一一对应，建立起表与类属性的名字一一匹配关系
    -->
    <resultMap id="stuMap" type="Student">
        <!--
            id标签：用来配置主键的对应关系
            result标签：用来配置普通字段的对应关系
            property属性：配置类中的属性名
            column属性：配置表中的字段名
        -->
        <id property="id" column="id"/>
        <result property="age" column="age"/>
        <result property="name" column="name"/>
    </resultMap>
    <select id="select7" resultMap="stuMap">
        select * from tbl_student
    </select>
    <select id="select9" resultType="Student" parameterType="Student">
        select * from tbl_student
        /*
            where标签：当where标签使用的时候，必须要要搭配where标签对中if标签来使用
            通过if标签的判断，如果有查询条件，则展现where关键字，如果没有查询条件则不展示where关键字

            where标签会自动屏蔽第一个连接符 and/or
        */
        <where>
            <if test="age!=null and age!=''">
                and age=#{age}
            </if>
            <if test="id!=null and id!=''">
                and id=#{id}
            </if>
        </where>
    </select>
    <select id="select10" resultType="Student">
        select * from tbl_student where id in
        /*
            foreach标签：用来遍历传递来的数组参数
            collection：标识传递参数类型
                        array：数组
                        list：集合
            item：每一次遍历出来的元素，在使用该元素的时候，需要套在#{}中
            open：拼接循环开始的符号
            close：拼接结束时候的符号
            separate：元素与元素之间的分隔符
        */
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>